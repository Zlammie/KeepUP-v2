<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Simple CRM</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <link rel="stylesheet" href="/assets/css/main.css">
</head>
<body>
  <%- include('../partials/nav') %>
  <%- include('../partials/top-nav-contacts') %>
  <div class="add-lead-wrapper">
     <h1>Add a New Contact</h1>
  <form id="contactForm">
    <div class="mb-3">
    
      <div id="lead-type-buttons" class="d-flex gap-2" role="group" aria-label="Contact type">
        <button type="button" class="btn btn-outline-primary rounded-pill active" data-type="contact">Lead</button>
        <button type="button" class="btn btn-outline-primary rounded-pill" data-type="realtor">Realtor</button>
        <button type="button" class="btn btn-outline-primary rounded-pill" data-type="lender">Lender</button>
      </div>

      <!-- Hidden input keeps same id the JS expects -->
      <input type="hidden" id="lead-type" value="contact">
    </div>
    <div class="mb-3">
      <label>First Name</label>
      <input type="text" class="form-control" id="firstName" required />
    </div>
    <div class="mb-3">
      <label>Last Name</label>
      <input type="text" class="form-control" id="lastName" />
    </div>
    <div class="mb-3">
      <label>Email</label>
      <input type="email" class="form-control" id="email"  />
    </div>
    <div class="mb-3">
      <label>Phone</label>
      <input type="text" class="form-control" id="phone" />
    </div>
    <div class="mb-3">
      <label>Visit Date</label>
      <input type="text" class="form-control" id="visit-date" />
    </div>
    <div class="realtor-fields d-none">
      <div class="mb-3">
        <label>Brokerage</label>
        <input type="text" class="form-control" id="brokerage" />
      </div>
    </div>

  <div class="lender-fields d-none">
    <div class="mb-3">
      <label>Lender Brokerage</label>
      <input type="text" class="form-control" id="lenderBrokerage" />
    </div>
    <div class="mb-3">
      <label>Lending Officer First Name</label>
      <input type="text" class="form-control" id="lenderFirstName" required />
    </div>
    <div class="mb-3">
      <label>Lending Officer Last Name</label>
      <input type="text" class="form-control" id="lenderLastName" required />
    </div>
    <div class="mb-3">
      <label>Lender Email</label>
      <input type="email" class="form-control" id="lenderEmail" />
    </div>
    <div class="mb-3">
      <label>Lender Phone</label>
      <input type="text" class="form-control" id="lenderPhone" />
    </div>
  </div>

<div>
  <button type="submit" class="btn btn-primary">Save Contact</button>
</div>
  </form>
</div>

<script>

  document.addEventListener('DOMContentLoaded', () => {
    const leadTypeSelect = document.getElementById('lead-type'); // now the hidden input
    const leadTypeButtons = document.getElementById('lead-type-buttons');
    const contactForm = document.getElementById('contactForm');

    function updateFieldVisibility() {
      const type = leadTypeSelect.value;

      const realtorFields = document.querySelector('.realtor-fields');
      const lenderFields = document.querySelector('.lender-fields');

      const visitDateField = document.getElementById('visit-date').closest('.mb-3');
      const firstNameField = document.getElementById('firstName').closest('.mb-3');
      const lastNameField = document.getElementById('lastName').closest('.mb-3');
      const emailField = document.getElementById('email').closest('.mb-3');
      const phoneField = document.getElementById('phone').closest('.mb-3');

      const firstNameInput = document.getElementById('firstName');
      const lastNameInput = document.getElementById('lastName');
      const emailInput = document.getElementById('email');
      const phoneInput = document.getElementById('phone');

      const lenderFirstInput = document.getElementById('lenderFirstName');
      const lenderLastInput = document.getElementById('lenderLastName');

      // Reset visibility and required
      realtorFields.classList.add('d-none');
      lenderFields.classList.add('d-none');
      visitDateField.classList.remove('d-none');
      firstNameField.classList.remove('d-none');
      lastNameField.classList.remove('d-none');
      emailField.classList.remove('d-none');
      phoneField.classList.remove('d-none');

      firstNameInput.required = true;
      lastNameInput.required = true;
      emailInput.required = true;
      phoneInput.required = true;
      lenderFirstInput.required = false;
      lenderLastInput.required = false;

      if (type === 'realtor') {
        realtorFields.classList.remove('d-none');
      } else if (type === 'lender') {
        lenderFields.classList.remove('d-none');
        visitDateField.classList.add('d-none');
        firstNameField.classList.add('d-none');
        lastNameField.classList.add('d-none');
        emailField.classList.add('d-none');
        phoneField.classList.add('d-none');

        firstNameInput.required = false;
        lastNameInput.required = false;
        emailInput.required = false;
        phoneInput.required = false;
        lenderFirstInput.required = true;
        lenderLastInput.required = true;
      }
    }

    // Handle clicks on the button group
leadTypeButtons.querySelectorAll('button').forEach(btn => {
  btn.addEventListener('click', () => {
    // 1) set hidden input value
    leadTypeSelect.value = btn.getAttribute('data-type');

    // 2) toggle active button styling
    leadTypeButtons.querySelectorAll('button').forEach(b => b.classList.remove('active'));
    btn.classList.add('active');

    // 3) re-run your existing visibility logic
    updateFieldVisibility();
  });
});

    leadTypeSelect.addEventListener('change', updateFieldVisibility);

    // Initial visibility set
    updateFieldVisibility();

    // Handle form submission manually
    contactForm.addEventListener('submit', async (e) => {
      e.preventDefault();

      const type = leadTypeSelect.value;

      const payload = {
        firstName: document.getElementById('firstName').value,
        lastName: document.getElementById('lastName').value,
        email: document.getElementById('email').value,
        phone: document.getElementById('phone').value,
        visitDate: document.getElementById('visit-date').value
      };

      if (type === 'realtor') {
        payload.brokerage = document.getElementById('brokerage').value;
      } else if (type === 'lender') {
        payload.lenderBrokerage = document.getElementById('lenderBrokerage').value;
        payload.firstName = document.getElementById('lenderFirstName').value;
        payload.lastName = document.getElementById('lenderLastName').value;
        payload.email = document.getElementById('lenderEmail').value;
        payload.phone = document.getElementById('lenderPhone').value;
        delete payload.visitDate;
      }

      const endpoint = type === 'realtor'
        ? '/api/realtors'
        : type === 'lender'
          ? '/api/lenders'
          : '/api/contacts';

      try {
        const res = await fetch(endpoint, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(payload)
        });

        if (!res.ok) {
          console.error(`Failed to save ${type}`);
        } else {
          console.log(`Successfully saved ${type}`);
          alert(`${type.charAt(0).toUpperCase() + type.slice(1)} saved successfully`);

          // âœ… Clear the form
          contactForm.reset();

          // Reapply visibility logic based on lead type (to keep correct fields visible)
          updateFieldVisibility();
        }
      } catch (err) {
        console.error('Form save error:', err);
      }
    });
  });
</script>



</body>
</html>
